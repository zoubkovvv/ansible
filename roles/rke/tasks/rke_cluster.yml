---
- name: Copy cluster.yml to "{{ _rke_config_dir }}"
  ansible.builtin.copy:
    src: files/cluster.yml
    dest: "{{ _rke_config_dir }}/cluster.yml"
    mode: '0644'

- name: Deploy Kubernetes with RKE
  ansible.builtin.shell: |
    set -o pipefail
    /usr/local/bin/rke up | tee rke-up.log
  args:
    executable: /bin/bash
    chdir: "{{ _rke_config_dir }}"
  changed_when: false

- name: Check deploy Kubernetes with RKE
  ansible.builtin.lineinfile:
    path: "{{ _rke_config_dir }}/rke-up.log"
    regexp: 'Finished building Kubernetes cluster successfully'
    state: absent
  check_mode: true
  register: rke_up_successfully
  changed_when: false
  failed_when: rke_up_successfully is failed or not rke_up_successfully.found

- name: Add read permission to group recursively
  ansible.builtin.file:
    path: "{{ _rke_config_dir }}"
    group: "{{ ansible_user }}"
    mode: "g+r"
    recurse: true

- name: Ensure $HOME/.kube exists
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    mode: '0755'

- name: Copy kubeconfig to default location
  ansible.builtin.copy:
    src: "{{ _rke_config_dir }}/kube_config_cluster.yml"
    dest: "/home/{{ ansible_user }}/.kube/config"
    mode: '0644'

- name: Install kubernetes Python library
  ansible.builtin.pip:
    name: "{{ item }}" 
    state: present
  loop:
    - kubernetes
    - jmespath
    - jsonpatch
    - pyyaml

      #- name: Wait for all k8s nodes to be ready
      #  shell: kubectl wait --for=condition=Ready nodes --all --timeout=600s
      #  register: nodes_ready

      #- debug: var=nodes_ready.stdout_lines

- name: Wait for each node to be ready
  kubernetes.core.k8s_info:
    kind: Node
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"
    wait: yes
    wait_condition:
      reason: KubeletReady
      type: Ready
      status: True
    wait_timeout: 30
    wait_sleep: 10


