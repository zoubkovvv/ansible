global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # See: https://ssl-config.mozilla.org/#server=haproxy&version=2.0.0
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-bind-options no-sslv3

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 1
    timeout http-request    10s
    timeout queue           20s
    timeout connect         5s
    timeout client          35s
    timeout server          35s
    timeout http-keep-alive 10s
    timeout check           10s
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

###############################################################################
# Stats
###############################################################################
listen stats
    bind 0.0.0.0:81
    mode http
    stats enable
    stats uri /stats
    stats auth admin:admin
    stats refresh 10s
    stats admin if TRUE

###############################################################################
# Frontends
###############################################################################

frontend home.lab
    bind 0.0.0.0:80
    option forwardfor

    acl acl_rancher_cluster hdr_reg(host) -i rancher.home.lab
    use_backend rancher_cluster if acl_rancher_cluster

    acl acl_cluster hdr_reg(host) -i api.home.lab
    use_backend cluster if acl_cluster

    acl acl_web hdr_reg(host) -i www.home.lab
    use_backend web if acl_web

    default_backend cluster

###############################################################################

frontend prometheus
    bind *:8405
    mode http
    http-request use-service prometheus-exporter if { path /metrics }
    no log

###############################################################################

frontend k8s-api
    bind *:6443
    mode tcp
    option tcplog
    default_backend k8s-api-backend

###############################################################################
# Backends
###############################################################################

backend rancher_cluster
    balance roundrobin
    option httpchk
    http-check send meth GET uri /healthz

{% for host in groups['rancher_cluster'] %}
server {{ host }} {{ hostvars[host]['ansible_host'] }}:80 check fall 3 rise 2
{% endfor %}

###############################################################################

backend cluster
    balance roundrobin
    option httpchk
    http-check send meth GET uri /healthz

{% for host in groups['cluster_worker'] %}
server {{ host }} {{ hostvars[host]['ansible_host'] }}:80 check fall 3 rise 2
{% endfor %}

###############################################################################

backend web
    balance roundrobin
    option httpchk
    http-check send meth GET uri /

{% for host in groups['web'] %}
server {{ host }} {{ hostvars[host]['ansible_host'] }}:80 check fall 3 rise 2
{% endfor %}

###############################################################################

backend k8s-api-backend
    option httpchk
    http-check connect ssl
    http-check send meth GET uri /healthz
    http-check expect status 200

    mode tcp
    balance     roundrobin   
 
    {% for host in groups['k8s_master'] %}
    server {{ host }} {{ hostvars[host]['ansible_host'] }}:6443 check verify none
    {% endfor %}

###############################################################################
